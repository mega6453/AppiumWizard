name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    env:
      Solution_Name: Appium Wizard

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    #- name: Setup MSBuild.exe
    #  uses: microsoft/setup-msbuild@v1.0.2

    - name: Build the solution with self-contained deployment
      run: microsoft/setup-msbuild@v1.0.2  $env:Solution_Name /p:Configuration=$env:Configuration /p:PublishSingleFile=true /p:PublishTrimmed=true
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the solution
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Inno Setup
      run: |
        choco install innosetup -y

    - name: Download File
      run: |
          Set-Location -Path "Appium Wizard/bin/Release/net6.0-windows/Resources/iOS/"
          Invoke-WebRequest -Uri "https://github.com/mega6453/SignIPAInWindows/releases/download/firstrelease/AppiumWizardDistro.vhdx" -OutFile "AppiumWizardDistro.vhdx"
    
    - name: Compile and generate EXE file
      run: |
        ISCC /Q "${{ env.SCRIPT_PATH }}"
      env:
        SCRIPT_PATH: "Appium Wizard/bin/Release/net6.0-windows/ExcludeInInstaller/Installer Script.iss"  

    - name: Zip the EXE file
      run: |
        $exePath = "Appium Wizard/bin/Release/net6.0-windows/output/AppiumWizard.exe"
        $zipPath = Join-Path (Split-Path $exePath) "AppiumWizard.zip"
        Compress-Archive -Path $exePath -DestinationPath $zipPath

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: "Appium Wizard/bin/Release/net6.0-windows/output/AppiumWizard.zip"
        tag_name: v1.0.0
        release_name: Release 1.0.0
        body: |
          Release version 1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.APPIUMWIZARD_TOKEN }}
